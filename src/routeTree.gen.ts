/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const StylesLazyImport = createFileRoute('/styles')()
const LoadLazyImport = createFileRoute('/load')()
const CountsLazyImport = createFileRoute('/counts')()

// Create/Update Routes

const StylesLazyRoute = StylesLazyImport.update({
  path: '/styles',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/styles.lazy').then((d) => d.Route))

const LoadLazyRoute = LoadLazyImport.update({
  path: '/load',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/load.lazy').then((d) => d.Route))

const CountsLazyRoute = CountsLazyImport.update({
  path: '/counts',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/counts.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/counts': {
      id: '/counts'
      path: '/counts'
      fullPath: '/counts'
      preLoaderRoute: typeof CountsLazyImport
      parentRoute: typeof rootRoute
    }
    '/load': {
      id: '/load'
      path: '/load'
      fullPath: '/load'
      preLoaderRoute: typeof LoadLazyImport
      parentRoute: typeof rootRoute
    }
    '/styles': {
      id: '/styles'
      path: '/styles'
      fullPath: '/styles'
      preLoaderRoute: typeof StylesLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  CountsLazyRoute,
  LoadLazyRoute,
  StylesLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/counts",
        "/load",
        "/styles"
      ]
    },
    "/counts": {
      "filePath": "counts.lazy.tsx"
    },
    "/load": {
      "filePath": "load.lazy.tsx"
    },
    "/styles": {
      "filePath": "styles.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
